plugins {
    id("com.android.application")
    id("org.jetbrains.kotlin.android")
    alias(androidxLibs.plugins.baselineprofile)
}

def enableBaselineProfileGenerator = getProperty("build.baselineprofile.generate.enable").toBoolean()
def enableDexlayoutOptimizer = getProperty("build.dexlayout.optimize.enable").toBoolean()
if (!enableBaselineProfileGenerator && enableDexlayoutOptimizer) {
    logger.warn("Baseline Profile generator was disabled, and cannot enable Dex Layout Optimizer")
    enableDexlayoutOptimizer = false
}

if (enableBaselineProfileGenerator) {
    apply plugin: "androidx.baselineprofile"
}

android {
    namespace "com.example.myapplication"
    defaultConfig {
        applicationId "com.example.myapplication"
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        compileOptions {
            coreLibraryDesugaringEnabled true
        }
    }
    buildTypes {
        release {
            if (enableDexlayoutOptimizer) {
                logger.warn("Dex Layout Optimizer was enabled")
            }
            experimentalProperties[
                "android.experimental.r8.dex-startup-optimization"
            ] = enableDexlayoutOptimizer

            postprocessing {
                removeUnusedCode true
                optimizeCode true
                obfuscate true
                removeUnusedResources true
                proguardFiles file('proguard-rules.pro')
            }

            // baselineprofile plugin does not support postprocessing dsl block, yet.
            // So, we need assign proguard rule again
            // https://issuetracker.google.com/issues/307784512
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), file('proguard-rules.pro')
        }
    }

    buildFeatures {
        compose = true
    }

    testFixtures {
        enable = true
    }

    flavorDimensions = ["default"]
    productFlavors {
        develop { }
        beta { }
        staging { }
        production { }
    }
}

dependencies {
    implementation androidxLibs.profileinstaller
    coreLibraryDesugaring libs.desugar.jdk.libs

    if (enableBaselineProfileGenerator) {
       baselineProfile(project(":tests:baselineprofile"))
    }

    runtimeOnly(androidxLibs.profileinstaller)

    implementation libs.kotlin.stdlib.jdk7
    implementation androidxLibs.appcompat
    implementation androidxLibs.core.ktx
    implementation androidxLibs.constraintlayout
    implementation androidxLibs.room.ktx
    implementation androidxLibs.room.runtime
}

if (enableBaselineProfileGenerator) {
    baselineProfile {
        variants {
            release {
                automaticGenerationDuringBuild = true
            }
        }
    }
}
